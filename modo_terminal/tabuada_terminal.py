import random

# Dicion√°rio de erros para sugerir treino depois do modo desafio
erros = {}

def mostrar_menu():
    print("\n=== TABUADA INTELIGENTE ===")
    print("1 - Ver tabuada completa de um n√∫mero")
    print("2 - Ver uma conta espec√≠fica da tabuada")
    print("3 - Ver como soma repetida")
    print("4 - Ver dica de memoriza√ß√£o")
    print("5 - Modo desafio")
    print("0 - Sair")

def escolher_numero():
    while True:
        try:
            numero = int(input("Digite um n√∫mero entre 1 e 10: "))
            if 1 <= numero <= 10:
                return numero
            else:
                print("‚ö†Ô∏è Apenas n√∫meros de 1 a 10 s√£o permitidos.")
        except ValueError:
            print("‚ö†Ô∏è Entrada inv√°lida. Digite um n√∫mero inteiro.")

def tabuada_completa(numero):
    print(f"\nüìò Tabuada do {numero}:")
    for i in range(1, 11):
        print(f"{numero} x {i} = {numero * i}")

def conta_especifica(numero):
    while True:
        try:
            multiplicador = int(input(f"Escolha um n√∫mero de 1 a 10 para multiplicar com {numero}: "))
            if 1 <= multiplicador <= 10:
                print(f"\nüîç Resultado: {numero} x {multiplicador} = {numero * multiplicador}")
                break
            else:
                print("‚ö†Ô∏è Apenas n√∫meros de 1 a 10 s√£o permitidos.")
        except ValueError:
            print("‚ö†Ô∏è Entrada inv√°lida. Digite um n√∫mero inteiro.")

def soma_repetida(numero):
    while True:
        try:
            multiplicador = int(input(f"Escolha um n√∫mero de 1 a 10 para multiplicar com {numero}: "))
            if 1 <= multiplicador <= 10:
                soma = " + ".join([str(numero)] * multiplicador)
                resultado = numero * multiplicador
                print(f"\nüß† Soma repetida:\n{numero} x {multiplicador} = {soma} = {resultado}")
                break
            else:
                print("‚ö†Ô∏è Apenas n√∫meros de 1 a 10 s√£o permitidos.")
        except ValueError:
            print("‚ö†Ô∏è Entrada inv√°lida. Digite um n√∫mero inteiro.")

def dica_memorizacao(numero):
    dicas = {
        1: "üéØ Tabuada do 1: Qualquer n√∫mero √ó 1 = o pr√≥prio n√∫mero!\nüí° Dica: √â como n√£o fazer nada, o n√∫mero fica igual.",
        2: "üéØ Tabuada do 2: √â dobrar o n√∫mero!\nüí° Dica: 2√ó3 = 3+3 = 6. Sempre some o n√∫mero com ele mesmo.\nüî¢ Padr√£o: 2, 4, 6, 8, 10, 12, 14, 16, 18, 20",
        3: "üéØ Tabuada do 3: Use os dedos para contar!\nüí° Dica: 3√ó4 = conte 3, 6, 9, 12 (pule de 3 em 3).\nüî¢ Padr√£o: 3, 6, 9, 12, 15, 18, 21, 24, 27, 30",
        4: "üéØ Tabuada do 4: √â dobrar duas vezes!\nüí° Dica: 4√ó3 = (2√ó3) + (2√ó3) = 6 + 6 = 12\nüî¢ Padr√£o: 4, 8, 12, 16, 20, 24, 28, 32, 36, 40",
        5: "üéØ Tabuada do 5: Termina sempre em 0 ou 5!\nüí° Dica: 5√ó4 = 20, 5√ó7 = 35. Conte de 5 em 5!\nüî¢ Padr√£o: 5, 10, 15, 20, 25, 30, 35, 40, 45, 50",
        6: "üéØ Tabuada do 6: Use a tabuada do 3 e dobre!\nüí° Dica: 6√ó4 = (3√ó4) √ó 2 = 12 √ó 2 = 24\nüî¢ Padr√£o: 6, 12, 18, 24, 30, 36, 42, 48, 54, 60",
        7: "üéØ Tabuada do 7: A mais dif√≠cil, mas tem truques!\nüí° Dica: 7√ó2 = 14, 7√ó3 = 21. Use os dedos para contar!\nüî¢ Padr√£o: 7, 14, 21, 28, 35, 42, 49, 56, 63, 70",
        8: "üéØ Tabuada do 8: √â dobrar 3 vezes!\nüí° Dica: 8√ó3 = (4√ó3) √ó 2 = 12 √ó 2 = 24\nüî¢ Padr√£o: 8, 16, 24, 32, 40, 48, 56, 64, 72, 80",
        9: "üéØ Tabuada do 9: Truque dos dedos!\nüí° Dica: 9√ó3 = 27. A soma dos d√≠gitos (2+7) = 9!\nüî¢ Padr√£o: 9, 18, 27, 36, 45, 54, 63, 72, 81, 90",
        10: "üéØ Tabuada do 10: S√≥ adicionar um zero!\nüí° Dica: 10√ó4 = 40. √â o n√∫mero original + 0 no final!\nüî¢ Padr√£o: 10, 20, 30, 40, 50, 60, 70, 80, 90, 100",
    }
    texto = dicas.get(numero, "Essa tabuada n√£o tem uma dica especial.")
    print(f"\nüí° Dicas para o {numero}:\n{texto}")

def sugerir_treino():
    if erros:
        mais_errado = max(erros, key=erros.get)
        numero, multiplicador = mais_errado
        print(f"\nüìå Sugest√£o de treino:\nVoc√™ errou bastante {numero} x {multiplicador}. Que tal praticar essa conta?")

def modo_desafio():
    numero = random.randint(1, 10)
    multiplicador = random.randint(1, 10)
    try:
        resposta = int(input(f"Quanto √© {numero} x {multiplicador}? "))
        correto = numero * multiplicador
        if resposta == correto:
            print(f"‚úÖ Acertou! {numero} x {multiplicador} = {correto}")
        else:
            print(f"‚ùå Errou. Resposta correta: {numero} x {multiplicador} = {correto}")
            erros[(numero, multiplicador)] = erros.get((numero, multiplicador), 0) + 1
            sugerir_treino()
    except ValueError:
        print("‚ö†Ô∏è Entrada inv√°lida. Digite um n√∫mero inteiro.")